#  --------------------------------------------------------
#  Karnak Application Profiles
#  --------------------------------------------------------
name: KARNAK-Profile
#environment: LOCAL
karnakadmin: ${KARNAK_ADMIN:admin}
karnakpassword: ${KARNAK_PASSWORD:admin}
karnakpostgreskey: ${DB_ENCRYPTION_KEY}

# TODO TELIMA-289: config pseudo service server url + port + etc.. + update readme + set paths to retrieve data depending
# on pseudo service used

# - Logs
logging:
  level:
    org:
      springframework: INFO
      karnak: INFO
    com:
      vaadin:
        flow:
          server:
            communication:
              # Suppress WARN  c.v.f.s.c.ReturnChannelHandler - Ignoring update for disabled return channel
              rpc:
                MapSyncRpcHandler: ERROR
              ReturnChannelHandler: ERROR
server:
  port: 8081
  servlet:
    session:
      persistent: false
  forward-headers-strategy: NATIVE
spring:
  application:
    name: karnak
    version: '@project.version@'
  cloud:
    config:
      discovery:
        enabled: false
#    Currently no cs configured in docker deploy/ vault
#      fail-fast: true
      name: ${spring.application.name}
      label: ${ENVIRONMENT}
#      uri: ${CONFIGSERVER_URI}
#  config:
#    import: 'configserver:'
  liquibase:
    enabled: true
    change-log: classpath:db/changelog/db.changelog-master.yaml
  profiles:
    active: '@activatedProperties@,redis'
  datasource:
    password: ${DB_PASSWORD:5!KAnN@%98%d}
    url: 'jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5433}/${DB_NAME:karnak}'
    username: ${DB_USER:karnak}
    hikari:
      pool-name: karnak
      leak-detection-threshold: 0
      minimum-idle: 5
      maximum-pool-size: 10
      connection-timeout: 10000
      idle-timeout: 300000
      max-lifetime: 270000 # 4 minutes 30 secondes
      validation-timeout: 3000
      connection-test-query: SELECT 1
      connection-init-sql: select set_config('encryption.key', '${DB_ENCRYPTION_KEY}', false)
  mustache:
    check-template-location: false
  jpa:
    hibernate:
      # First time to create the db the value must be: create
      ddl-auto: none
    generate-ddl: false
    show-sql: false
    open-in-view: false
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        #    In order to still use the unique hibernate_sequence, otherwise we should create a sequence table_name_seq for
        #  each tables
        id:
          db_structure_naming_strategy: legacy
        temp:
          use_jdbc_metadata_defaults: false
      jdbc:
        lob:
          non_contextual_creation: true
monitoring:
  # Maximum of sop instance sent for the monitoring
  max-history: 150000
cache-api:
  # Cache Time to leave in minutes for API calls
  ttl: 15

mail:
  sender: karnak@kheops.online