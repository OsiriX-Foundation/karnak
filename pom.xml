<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>org.karnak</groupId>
  <artifactId>karnak</artifactId>
  <name>${project.artifactId}</name>
  <version>1.0.3</version>
  <description>Karnak</description>
  <packaging>jar</packaging>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <enforcer.jdk-version>[${java.version},)</enforcer.jdk-version>
    <enforcer.maven-version>[3.3.0,)</enforcer.maven-version>
    <java.version>21</java.version>

    <springframework.version>3.4.2</springframework.version>
    <springdoc.version>1.8.0</springdoc.version>
    <vaadin.version>24.6.2</vaadin.version>
    <org.json.version>20250107</org.json.version>
    <opencsv.version>5.9</opencsv.version>

    <weasis-dicom-tools.version>5.32.0</weasis-dicom-tools.version>
    <weasis.opencv.native.version>4.9.0-dcm</weasis.opencv.native.version>

    <h2.version>2.2.224</h2.version>
    <mockito.version>5.2.0</mockito.version>
    <swagger.version>2.2.26</swagger.version>

    <sonar.organization>osirix-foundation-1</sonar.organization>
    <sonar.projectKey>karnak</sonar.projectKey>
    <sonar.host.url>https://sonarcloud.io</sonar.host.url>
    <sonar.language>java</sonar.language>
    <sonar.java.source>${java.version}</sonar.java.source>
    <sonar.test.exclusions>src/test/**/*</sonar.test.exclusions>

    <!-- Tests require the native library and can only be run on Linux, Windows and macOS-->
    <argLine>-Djava.library.path=${project.build.outputDirectory}/lib/${os-name}-${cpu-name}</argLine>
 </properties>

  <licenses>
    <license>
      <distribution>repo</distribution>
      <name>Eclipse Public License v2.0</name>
      <url>https://www.eclipse.org/legal/epl-v20.html</url>
    </license>
    <license>
      <name>Apache License v2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <repositories>
    <repository>
      <id>central</id>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <url>https://repo.maven.apache.org/maven2</url>
    </repository>
    <repository>
      <id>vaadin-addons</id>
      <url>https://maven.vaadin.com/vaadin-addons</url>
    </repository>
    <repository>
      <id>mvn-repo-master</id>
      <url>https://raw.github.com/nroduit/mvn-repo/master/</url>
    </repository>
    <repository>
      <id>www.dcm4che.org</id>
      <name>dcm4che Repository</name>
      <url>https://www.dcm4che.org/maven2</url>
    </repository>
  </repositories>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.12.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>3.1.3</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.4.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>3.1.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.4.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.felix</groupId>
          <artifactId>maven-bundle-plugin</artifactId>
          <version>5.1.9</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.6.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.5.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.3.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>3.5.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.3.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>4.0.0-M16</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>3.6.0</version>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>0.8.12</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>min-requirement</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>${enforcer.maven-version}</version>
                </requireMavenVersion>
                <requireJavaVersion>
                  <version>${enforcer.jdk-version}</version>
                </requireJavaVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.weasis.thirdparty.org.opencv</groupId>
                  <artifactId>${lib-file-name}</artifactId>
                  <version>${weasis.opencv.native.version}</version>
                  <type>${lib-file-ext}</type>
                  <classifier>${os-name}-${cpu-name}</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.outputDirectory}/lib/${os-name}-${cpu-name}</outputDirectory>
                  <destFileName>${lib-file-name}.${lib-file-ext}</destFileName>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${springframework.version}</version>
        <configuration>
          <jvmArguments>
            -Djava.library.path="${java.io.tmpdir}/dicom-opencv-${weasis.opencv.native.version}"
          </jvmArguments>
          <!-- Clean build and startup time for Vaadin apps sometimes may exceed the default Spring Boot's 30sec timeout.  -->
          <layers>
            <enabled>true</enabled>
          </layers>
          <maxAttempts>240</maxAttempts>
          <wait>500</wait>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Take care of synchronizing java dependencies and imports in package.json and main.js files. It also creates webpack.config.js
        if not exists yet. -->
      <plugin>
        <groupId>com.vaadin</groupId>
        <artifactId>vaadin-maven-plugin</artifactId>
        <version>${vaadin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>prepare-frontend</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>io.spring.javaformat</groupId>
        <artifactId>spring-javaformat-maven-plugin</artifactId>
        <version>0.0.41</version>
      </plugin>
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>2.44.2</version>
        <configuration>
          <!-- define a language-specific format -->
          <java>
            <licenseHeader>
              <!-- @formatter:off -->
              <content>
/*
 * Copyright (c) $YEAR Karnak Team and other contributors.
 *
 * This program and the accompanying materials are made available under the terms of the Eclipse
 * Public License 2.0 which is available at https://www.eclipse.org/legal/epl-2.0, or the Apache
 * License, Version 2.0 which is available at https://www.apache.org/licenses/LICENSE-2.0.
 *
 * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0
 */
              </content>
              <!-- @formatter:on -->
            </licenseHeader>
          </java>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <argLine>@{argLine} -XX:+EnableDynamicAgentLoading -Xshare:off</argLine>
          <parallel>all</parallel>
        </configuration>
      </plugin>
    </plugins>

    <resources>
      <resource>
        <filtering>true</filtering>
        <directory>src/main/resources</directory>
        <includes>
          <include>**/application*.yml</include>
          <include>**/application*.yaml</include>
          <include>**/application*.properties</include>
        </includes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <excludes>
          <exclude>**/application*.yml</exclude>
          <exclude>**/application*.yaml</exclude>
          <exclude>**/application*.properties</exclude>
        </excludes>
      </resource>
    </resources>

  </build>

  <!-- Dependency Management -->
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${springframework.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>com.vaadin</groupId>
        <artifactId>vaadin-bom</artifactId>
        <version>${vaadin.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <artifactId>spring-boot-starter</artifactId>
      <groupId>org.springframework.boot</groupId>
      <exclusions>
        <exclusion>
          <groupId>com.vaadin.external.google</groupId>
          <artifactId>android-json</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <artifactId>spring-boot-starter-web</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-mail</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-thymeleaf</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-cache</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-redis</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>

    <dependency>
      <artifactId>json</artifactId>
      <groupId>org.json</groupId>
      <version>${org.json.version}</version>
    </dependency>

    <dependency>
      <artifactId>gson</artifactId>
      <groupId>com.google.code.gson</groupId>
    </dependency>

    <dependency>
      <groupId>com.opencsv</groupId>
      <artifactId>opencsv</artifactId>
      <version>${opencsv.version}</version>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.weasis</groupId>
      <artifactId>weasis-dicom-tools</artifactId>
      <version>${weasis-dicom-tools.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </exclusion>
        <exclusion>
          <artifactId>libopencv_java</artifactId>
          <groupId>org.weasis.thirdparty.org.opencv</groupId>
        </exclusion>
        <exclusion>
          <artifactId>opencv_java</artifactId>
          <groupId>org.weasis.thirdparty.org.opencv</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- ====== -->
    <!-- Lombok -->
    <!-- ====== -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>

    <!-- Spring Security -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>

    <!-- Oauth2 -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-oauth2-client</artifactId>
      <version>${springframework.version}</version>
    </dependency>

    <!-- Swagger -->
    <dependency>
      <groupId>io.swagger.core.v3</groupId>
      <artifactId>swagger-annotations</artifactId>
      <version>${swagger.version}</version>
    </dependency>

    <!-- Lombok -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>

    <!-- Bean validation implementation -->
    <dependency>
      <artifactId>hibernate-validator</artifactId>
      <groupId>org.hibernate.validator</groupId>
    </dependency>

    <!-- PostgreSQL -->
    <dependency>
      <artifactId>postgresql</artifactId>
      <groupId>org.postgresql</groupId>
      <scope>runtime</scope>
    </dependency>

    <!-- ========= -->
    <!-- Liquibase -->
    <!-- ========= -->
    <dependency>
      <groupId>org.liquibase</groupId>
      <artifactId>liquibase-core</artifactId>
    </dependency>

    <!-- ========= -->
    <!--   Vaadin  -->
    <!-- ========= -->
    <!-- Vaadin Spring -->
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-spring-boot-starter</artifactId>
      <exclusions>
        <!-- Excluding so that webjars are not included. -->
        <exclusion>
          <artifactId>vaadin-core</artifactId>
          <groupId>com.vaadin</groupId>
        </exclusion>
        <exclusion>
          <artifactId>spring-boot-starter-web</artifactId>
          <groupId>org.springframework.boot</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>4.5.14</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
    </dependency>

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>33.3.0-jre</version>
    </dependency>

    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin</artifactId>
      <!-- Replace artifactId with vaadin-core to use only free components -->
      <exclusions>
        <!-- Webjars are only needed when running in Vaadin 13 compatibility mode -->
        <exclusion>
          <artifactId>*</artifactId>
          <groupId>com.vaadin.webjar</groupId>
        </exclusion>
        <exclusion>
          <artifactId>*</artifactId>
          <groupId>org.webjars.bowergithub.insites</groupId>
        </exclusion>
        <exclusion>
          <artifactId>*</artifactId>
          <groupId>org.webjars.bowergithub.polymer</groupId>
        </exclusion>
        <exclusion>
          <artifactId>*</artifactId>
          <groupId>org.webjars.bowergithub.polymerelements</groupId>
        </exclusion>
        <exclusion>
          <artifactId>*</artifactId>
          <groupId>org.webjars.bowergithub.vaadin</groupId>
        </exclusion>
        <exclusion>
          <artifactId>*</artifactId>
          <groupId>org.webjars.bowergithub.webcomponents</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <artifactId>vaadin-confirm-dialog-flow</artifactId>
      <groupId>com.vaadin</groupId>
    </dependency>

    <!-- Vaadin - Addons -->
    <dependency>
      <artifactId>togglebutton</artifactId>
      <groupId>com.vaadin.componentfactory</groupId>
      <version>3.0.0</version>
    </dependency>
    <dependency>
      <groupId>org.vaadin.klaudeta</groupId>
      <artifactId>grid-pagination</artifactId>
      <version>4.0.0</version>
    </dependency>

    <!--	Jackson -->
    <dependency>
      <artifactId>jackson-annotations</artifactId>
      <groupId>com.fasterxml.jackson.core</groupId>
    </dependency>
    <dependency>
      <artifactId>jackson-databind</artifactId>
      <groupId>com.fasterxml.jackson.core</groupId>
    </dependency>
    <dependency>
      <artifactId>jackson-module-jaxb-annotations</artifactId>
      <groupId>com.fasterxml.jackson.module</groupId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-yaml</artifactId>
    </dependency>
    <!-- Jackson Xml -->
    <dependency>
      <artifactId>jackson-dataformat-xml</artifactId>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
    </dependency>


    <!-- Tests -->
    <dependency>
      <artifactId>janino</artifactId>
      <groupId>org.codehaus.janino</groupId>
    </dependency>

    <!-- Tests -->
    <dependency>
      <artifactId>spring-boot-starter-test</artifactId>
      <groupId>org.springframework.boot</groupId>
      <scope>test</scope>
      <version>${springframework.version}</version>
    </dependency>

    <!-- Mockito inline -->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-inline</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- DB H2 for tests -->
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>${h2.version}</version>
    </dependency>

    <dependency>
      <groupId>org.vaadin.artur</groupId>
      <artifactId>spring-data-provider</artifactId>
      <version>2.1.0</version>
    </dependency>
  </dependencies>

  <profiles>
    <!--  Profile: production -->
    <profile>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>

      <!-- Production mode is activated using -Pproduction -->
      <id>production</id>
      <properties>
        <vaadin.productionMode>true</vaadin.productionMode>
      </properties>

      <dependencies>
        <dependency>
          <artifactId>flow-server-production-mode</artifactId>
          <groupId>com.vaadin</groupId>
        </dependency>
      </dependencies>

      <build>
        <plugins>
          <plugin>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-maven-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>build-frontend</goal>
                </goals>
                <phase>compile</phase>
              </execution>
            </executions>
            <configuration>
              <pnpmEnable>true</pnpmEnable>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>linux-x86_64</id>
      <activation>
        <os>
          <name>linux</name>
          <arch>amd64</arch>
        </os>
      </activation>
      <properties>
        <os-name>linux</os-name>
        <cpu-name>x86-64</cpu-name>
        <lib-file-name>libopencv_java</lib-file-name>
        <lib-file-ext>so</lib-file-ext>
      </properties>
    </profile>
    <profile>
      <id>linux-aarch64</id>
      <activation>
        <os>
          <name>linux</name>
          <arch>aarch64</arch>
        </os>
      </activation>
      <properties>
        <os-name>linux</os-name>
        <cpu-name>aarch64</cpu-name>
        <lib-file-name>libopencv_java</lib-file-name>
        <lib-file-ext>so</lib-file-ext>
      </properties>
    </profile>
    <profile>
      <id>linux-arm32</id>
      <activation>
        <os>
          <name>linux</name>
          <arch>arm</arch>
        </os>
      </activation>
      <properties>
        <os-name>linux</os-name>
        <cpu-name>armv7a</cpu-name>
        <lib-file-name>libopencv_java</lib-file-name>
        <lib-file-ext>so</lib-file-ext>
      </properties>
    </profile>
    <profile>
      <id>macosx-x86_64</id>
      <activation>
        <os>
          <name>mac os x</name>
          <arch>x86_64</arch>
        </os>
      </activation>
      <properties>
        <os-name>macosx</os-name>
        <cpu-name>x86-64</cpu-name>
        <lib-file-name>libopencv_java</lib-file-name>
        <lib-file-ext>dylib</lib-file-ext>
      </properties>
    </profile>
    <profile>
      <id>macosx-aarch64</id>
      <activation>
        <os>
          <name>mac os x</name>
          <arch>aarch64</arch>
        </os>
      </activation>
      <properties>
        <os-name>macosx</os-name>
        <cpu-name>aarch64</cpu-name>
        <lib-file-name>libopencv_java</lib-file-name>
        <lib-file-ext>dylib</lib-file-ext>
      </properties>
    </profile>
    <profile>
      <id>windows-x86_64</id>
      <activation>
        <os>
          <family>windows</family>
          <arch>amd64</arch>
        </os>
      </activation>
      <properties>
        <os-name>windows</os-name>
        <cpu-name>x86-64</cpu-name>
        <lib-file-name>opencv_java</lib-file-name>
        <lib-file-ext>dll</lib-file-ext>
      </properties>
    </profile>
    <profile>
      <id>windows-x86</id>
      <activation>
        <os>
          <family>windows</family>
          <arch>x86</arch>
        </os>
      </activation>
      <properties>
        <os-name>windows</os-name>
        <cpu-name>x86</cpu-name>
        <lib-file-name>opencv_java</lib-file-name>
        <lib-file-ext>dll</lib-file-ext>
      </properties>
    </profile>

    <profile>
      <id>coverage</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <configuration>
              <excludes>
                <exclude>org/karnak/frontend/**</exclude>
              </excludes>
            </configuration>
            <executions>
              <execution>
                <id>prepare-agent</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>report</id>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>

