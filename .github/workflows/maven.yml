name: Build
on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  pull_request:
    types: [ opened, synchronize, reopened ]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    env:
      PUSH_PACKAGES: ${{ github.event_name == 'push' }}
    steps:
      - name: Setup NODE
        uses: actions/setup-node@v4
        with:
          node-version: "22"
      - run: echo 'NODE_OPTIONS="--openssl-legacy-provider"' >> $GITHUB_ENV
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK for compilation
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -Pcoverage -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:5.0.0.4389:sonar
      # Build Docker image and push it to Docker Hub
      - name: Build the spring app
        if: ${{ env.PUSH_PACKAGES }}
        shell: bash
        run: mvn -B clean install -P production -Dmaven.test.skip=true
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: osirixfoundation/karnak
      - name: Set up QEMU
        if: ${{ env.PUSH_PACKAGES }}
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        if: ${{ env.PUSH_PACKAGES }}
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        if: ${{ env.PUSH_PACKAGES }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        if: ${{ env.PUSH_PACKAGES }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: src/main/docker/Dockerfile
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
